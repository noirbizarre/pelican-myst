[tool.poetry]
name = "pelican-myst"
version = "0.1.0"
description = "A Pelican Myst reader"
authors = ["Axel H. <noirbizarre@gmail.com>"]
license = "MIT"
packages = [
    { include = "pelican" },
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
pelican = ">=4.0,<5.0"
PyYAML = "^6.0"
markdown-it-py = {extras = ["linkify", "plugins"], version = "^2.0.0"}

# [tool.poetry.group.lint.dependencies]
black = {version = "^21.12b0", allow-prereleases = true, optional = true}
flake8 = {version = "<5.0", optional = true}
isort = {version = "^5.10.1", optional = true}
mypy = {version = ">=0.920,<0.932", optional = true}
types-mock = {version = ">=4.0.4,<6.0.0", optional = true}

# [tool.poetry.group.test.dependencies]
pyquery = {version = "^1.4.3", optional = true}
pytest = {version = "^6.2.5", optional = true}
pytest-cov = {version = "^3.0.0", optional = true}
pytest-pythonpath = {version = "^0.7.3", optional = true}
pytest-sugar = {version = "^0.9.4", optional = true}


[tool.poetry.extras]
test = [
  "pyquery",
  "pytest",
  "pytest-cov",
  "pytest-pythonpath",
  "pytest-sugar",
]
lint = [
  "black",
  "flake8",
  "isort",
  "mypy",
  "types-mock",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
# Maintain compatibility with Black
# See: https://pycqa.github.io/isort/docs/configuration/black_compatibility/
profile = "black"
multi_line_output = 3

# Sort imports within their section independent of the import type
force_sort_within_sections = true

# Designate "pelican" as separate import section
known_pelican = "pelican"
sections = "FUTURE,STDLIB,THIRDPARTY,PELICAN,FIRSTPARTY,LOCALFOLDER"

[tool.black]
line-length = 100
experimental-string-processing = true
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs        # exclude a few common directories in the
    | \.git         # root of the project
    | \.mypy_cache
    | \.venv
    | \venv
    | updates       # Mostly generated files and SQL
  )/
  | foo.py          # also separately exclude a file named foo.py in
                    # the root of the project
)
'''

[tool.mypy]
python_version = "3.9"
exclude = "doc/*.py"
show_error_codes = true

[tool.pytest.ini_options]
norecursedirs = ".git build dist"
testpaths = "tests"
